<%# @param item [Item] %>
<%# @param readonly [TrueClass, FalseClass] %>

<% readonly rescue readonly = false %>

<div class="block_item block_item_<%=item.class.relative_name%>" id="item-<%= item.id %>"
     style="<%= item.gui_settings.get('style') rescue '' %>">

  <% @item_actions = "";
     @item_content = render :partial => "items/#{item.class.name.underscore}",
            :object => item,
            :as => "item", 
            :locals => { :readonly => readonly } %>

  <div class="block_item_content">
    <% unless readonly %>
      <%= render :partial => "items/item_actions", 
                 :object => item, :as => "item",
                 :locals => {:extra_actions => @item_actions, 
                             :comment_list_id => "comment_list_#{item.id}"} %>
    <% end %>
    
    <%= @item_content %>
  </div>

  <% unless readonly %>
    <%= render :partial => "items/item_comments", 
               :object => item, :as => "item",
               :locals => {:comment_list_id => "comment_list_#{item.id}"} %>  
  
    <script type="text/javascript">
      $("#item-<%= item.id %>").draggable({
        // handle: ".block_item_header",
        cancel: ".cancel_draggable",
        containment: "parent",
        scroll: true,
        scrollSensitivity: 20,
        scrollSpeed: 20, 
        stop: function() {
          var $elem = $(this);
          var style = $elem.attr('style');
          var ev = new AddToHashField({
            target: Red.Meta.createRecord(<%=item.class.name.inspect.html_safe%>, <%=item.id%>),
            fieldName: "gui_settings",
            key: "style",
            value: style
          });
          ev.fire();
        }
      });
    </script>
  <% end %>
</div>
